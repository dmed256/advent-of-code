#!/bin/bash

PROJ_DIR=$(cd $(dirname $BASH_SOURCE) && pwd)

cd "${PROJ_DIR}/advent_of_code"
export CI=1

files=$(find * -type f | \
            grep '[0-9]\{4\}/[0-9]\{2\}.py' | \
            sort)

slow_tests+=('2016/11.py')

function epoch-seconds {
    perl -MTime::HiRes=time -e 'printf "%.3f\n", time'
}

function time-taken {
    echo "$2 - $1" | \
        bc -l | \
        awk '{printf "%.3f", $0}'
}

NORM='\e[0m'
BLUE='\e[34m'
GREEN='\e[32m'
RED='\e[31m'
YELLOW='\e[33m'

# Warm-up Python
python3 "2015/01.py" > /dev/null 2>&1

failed_tests=()
time_taken_outputs=()

script_start_time=`epoch-seconds`
for file in ${files}; do
    if [[ "${slow_tests[*]}" =~ "${file}" ]]; then
        printf "${RED}Skip:   ${file%.*}${NORM}\n"
        continue
    fi

    printf "Testing ${BLUE}${file%.*}${NORM}: "

    start_time=`epoch-seconds`
    python3 "${file}" > /dev/null 2>&1
    status_code=$?
    end_time=`epoch-seconds`

    time_taken=$(time-taken "${start_time}" "${end_time}")
    time_taken_str="(${YELLOW}Time taken: ${time_taken}s${NORM})"

    if [[ "${status_code}" -ne 0 ]]; then
        printf "${RED}FAILED${NORM} ${time_taken_str}\n"
        failed_tests[${#failed_tests[@]}]="${file}"
    else
        time_taken_outputs[${#time_taken_outputs[@]}]="${file%.*}: ${time_taken}s"
        printf "${GREEN}PASSED${NORM} ${time_taken_str}\n"
    fi
done
script_end_time=`epoch-seconds`
time_taken=$(time-taken "${script_start_time}" "${script_end_time}")
printf "\n${YELLOW}Total time taken: ${time_taken}s${NORM}\n\n"

# Print slowest tests
SLOWEST_TESTS=30
printf "${YELLOW}Slowest ${SLOWEST_TESTS} tests${NORM}:\n"

IFS=$'\n' sort -nrk2 <<< "${time_taken_outputs[*]}" | \
    head -n "${SLOWEST_TESTS}" | \
    awk '{ printf "- \033[0;34m" $1 " \033[0;33m" $2 "\n" }'

unset IFS

printf "\n\n"

# Check if any tests failed
if [[ "${#failed_tests[@]}" -eq 0 ]]; then
    exit 0
fi

for file in "${failed_tests[@]}"; do
    printf "Running failed test ${RED}${NORM}:\n"
    python3 "${file}"
    printf "\n\n"
done
exit 1
